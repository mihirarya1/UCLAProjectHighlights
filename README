NAME: Mihir Arya
<<<<<<< HEAD

The tarred file lab1b-705126618.tar.gz contains four files pertaining to project 1b. The first, is this file,
a README, which gives an overview of each of the remaining files. lab1b-server.c contains the server side
implementation of this project; at a high level, it forwards client output to a child process, and then redirects
the output of the child process back towards the client. The client sends/receives data from the server, posts data
to the screen as necessary, and also mantains a log file of all communication with the server. The Makefile is capable
of building both the source files, where the default case is to build both simultaneously. It also has a clean command
which removes all files from the current working directory except the four aforementioned, and a dist command which 
produces the tar file.  

External Sources Referred to:

	 https://zlib.net/zlib_how.html (information on zlib approach)

	 https://docs.microsoft.com/en-us/windows/win32/api/winsock/ns-winsock-hostent#:~:text=The%20hostent%20structure%20is%20used,free%20any%20of%20its%20components.
	 ( hostent structure )

...
=======
EMAIL: mihirarya@ucla.edu
ID: 705126618

The tar project file for project 1a, contains this file (README), along with a source
code file (lab1a.c), and a Makefile. The source code file contains the implementation for a character-at-a-time
full duplex I/O which occurs during the general case, and the implementation to pass input in the following
manner when --shell argument is passed: Keyboard Input -> Terminal -> Shell Process -> Terminal -> Terminal Out . 
The Makefile contains a default case, which compiles the source C-file, in addition to a 'dist' case which dumps 
the three files of this project into a directory, and a 'clean' case which removes all files from the current working 
directory except for the three files part of this project.

References: 

	https://www.tutorialspoint.com/inter_process_communication/inter_process_communication_pipes.htm#:~:text=Two%2Dway%
	20Communication%20Using%20Pipes&text=Step%201%20%E2%88%92%20Create%20two%20pipes,2%20%E2%88%92%20Create%20a%20child%20process.

	The above source was used to gain a high level understanding of the dynamic between parent/child processes and pipes.
>>>>>>> cs111-p1a/master
